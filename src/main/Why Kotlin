1. Kotlin has complete null safety:
    a. Kotlin code won't compile if you want to access a method on a null object.
    b. Java usually has a ton of null pointer exception errors;
    c. Kotlin fixes this issue by allowing the ability for object to be declared
    as nullable;
    d. You prevent a ton of crashes by switching over to Kotlin.

2. Kotlin has the safe libraries as Java, so you can use the same methods in Kotlin
that you used in Java.

3. Kotlin has Coroutines, which aren't available for Java.
    a. Coroutines is an instance of a suspendable computation; essentially the codeblock that gets
    computed when starting a coroutine. It is conceptually similar to a thread, in the sense that
    it takes a block of code to run that works concurrently with the rest of the code. However, a
    coroutine is not bound to any particular thread. It may suspend its execution in one thread and
    resume in another one.

4. Kotlin requires less code than Java.

5. Kotlin has data and sealed classes whereas Java does not, which makes it easier for
us to handle data.

6. In Kotlin, usually when working with the start of a program, we put our "main ()", method
in a class, similar to how we have to do with Java. Kotlin however, has the concept of package-level functions:
If your function doesn't need to access properties of a class, it doesn't need to be wrapped in a class.

7. In Java, we have to pass in String []args in our parameter for our main method in order to configure
command line tools, however in Kotlin, those are optional.

8. Kotlin doesn't have a need for static modifiers and methods in order to indicate that that property can
be accessed outside of the class.

9. Kotlin has type inference and is type safe, meaning that the compiler will decide which type of value you
are working with and it doesn't always have to be explicitly stated.

10. Lastly, Kotlin doesn't have a need for semicolon in order to finish code. It is a pragmatic language,
which emphasizes making things easy to achieve. The compiler decides where semicolons are needed.